steps:
  - name: pypyr.steps.echo
    in:
      echoMe: begin
  - name: pypyr.steps.call
    retry:
      max: 3
    in:
      call:
        groups: sg1
  - name: pypyr.steps.echo
    in:
      echoMe: 'outer retry counter = {retryCounter}'
  - name: pypyr.steps.echo
    in:
      echoMe: end
sg1:
  - name: pypyr.steps.echo
    in:
      echoMe: 'sg1.{retryCounter}'
  - name: pypyr.steps.contextset
    in:
      contextSet:
        counterCopy: retryCounter
  - name: pypyr.steps.call
    retry:
      max: 3
    in:
      call:
        groups: sg2
  - name: pypyr.steps.assert
    run: !py 'counterCopy < 3'
    in:
      assert:
        this: false
  - name: pypyr.steps.echo
    in:
      echoMe: 'no err on sg1.{counterCopy} Retry counter because of nesting is {retryCounter}'
sg2:
  - name: pypyr.steps.echo
    in:
      echoMe: 'sg2.{retryCounter}'
